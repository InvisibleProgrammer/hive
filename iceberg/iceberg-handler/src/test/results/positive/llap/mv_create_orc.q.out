PREHOOK: query: drop materialized view if exists mv_create_orc
PREHOOK: type: DROP_MATERIALIZED_VIEW
POSTHOOK: query: drop materialized view if exists mv_create_orc
POSTHOOK: type: DROP_MATERIALIZED_VIEW
PREHOOK: query: drop table if exists ice_tbl_orc
PREHOOK: type: DROPTABLE
PREHOOK: Output: database:default
POSTHOOK: query: drop table if exists ice_tbl_orc
POSTHOOK: type: DROPTABLE
POSTHOOK: Output: database:default
PREHOOK: query: explain create table ice_tbl_orc (col1 int, col2 string) stored by iceberg stored as orc
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@ice_tbl_orc
POSTHOOK: query: explain create table ice_tbl_orc (col1 int, col2 string) stored by iceberg stored as orc
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@ice_tbl_orc
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Create Table
      columns: col1 int, col2 string
      name: default.ice_tbl_orc
      input format: org.apache.iceberg.mr.hive.HiveIcebergInputFormat
      output format: org.apache.iceberg.mr.hive.HiveIcebergOutputFormat
      serde properties:
        write.format.default orc
      storage handler: org.apache.iceberg.mr.hive.HiveIcebergStorageHandler
      table properties:
        storage_handler org.apache.iceberg.mr.hive.HiveIcebergStorageHandler

PREHOOK: query: create table ice_tbl_orc (col1 int, col2 string) stored by iceberg stored as orc
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@ice_tbl_orc
POSTHOOK: query: create table ice_tbl_orc (col1 int, col2 string) stored by iceberg stored as orc
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@ice_tbl_orc
PREHOOK: query: insert into ice_tbl_orc (col1, col2) values (1, 'Joe'), (2, 'Jack'), (3, 'Jill')
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@ice_tbl_orc
POSTHOOK: query: insert into ice_tbl_orc (col1, col2) values (1, 'Joe'), (2, 'Jack'), (3, 'Jill')
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@ice_tbl_orc
PREHOOK: query: explain create materialized view mv_create_orc stored by iceberg stored as orc
as
select col1, col2 from ice_tbl_orc where col1 > 1
PREHOOK: type: CREATE_MATERIALIZED_VIEW
PREHOOK: Input: default@ice_tbl_orc
PREHOOK: Output: database:default
PREHOOK: Output: default@mv_create_orc
#### A masked pattern was here ####
POSTHOOK: query: explain create materialized view mv_create_orc stored by iceberg stored as orc
as
select col1, col2 from ice_tbl_orc where col1 > 1
POSTHOOK: type: CREATE_MATERIALIZED_VIEW
POSTHOOK: Input: default@ice_tbl_orc
POSTHOOK: Output: database:default
POSTHOOK: Output: default@mv_create_orc
#### A masked pattern was here ####
STAGE DEPENDENCIES:
  Stage-4 is a root stage
  Stage-5 depends on stages: Stage-4
  Stage-1 depends on stages: Stage-5
  Stage-2 depends on stages: Stage-1
  Stage-3 depends on stages: Stage-0, Stage-2
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-4
    Create Materialized View
      columns: col1 int, col2 string
      input format: org.apache.iceberg.mr.hive.HiveIcebergInputFormat
#### A masked pattern was here ####
      output format: org.apache.iceberg.mr.hive.HiveIcebergOutputFormat
      serde properties:
        write.format.default orc
      storage handler: org.apache.iceberg.mr.hive.HiveIcebergStorageHandler
      table properties:
        storage_handler org.apache.iceberg.mr.hive.HiveIcebergStorageHandler
      expanded text: select `ice_tbl_orc`.`col1`, `ice_tbl_orc`.`col2` from `default`.`ice_tbl_orc` where `ice_tbl_orc`.`col1` > 1
      name: default.mv_create_orc
      original text: select col1, col2 from ice_tbl_orc where col1 > 1
      rewrite enabled: true

  Stage: Stage-5
    Materialized View Update
      name: default.mv_create_orc
      retrieve and include: true

  Stage: Stage-1
    Tez
#### A masked pattern was here ####
      Edges:
        Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: ice_tbl_orc
                  filterExpr: (col1 > 1) (type: boolean)
                  Statistics: Num rows: 3 Data size: 276 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: (col1 > 1) (type: boolean)
                    Statistics: Num rows: 3 Data size: 276 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: col1 (type: int), col2 (type: string)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 3 Data size: 276 Basic stats: COMPLETE Column stats: COMPLETE
                      File Output Operator
                        compressed: false
                        Statistics: Num rows: 3 Data size: 276 Basic stats: COMPLETE Column stats: COMPLETE
                        table:
                            input format: org.apache.iceberg.mr.hive.HiveIcebergInputFormat
                            output format: org.apache.iceberg.mr.hive.HiveIcebergOutputFormat
                            serde: org.apache.iceberg.mr.hive.HiveIcebergSerDe
                            name: default.mv_create_orc
                      Select Operator
                        expressions: _col0 (type: int), _col1 (type: string)
                        outputColumnNames: col1, col2
                        Statistics: Num rows: 3 Data size: 276 Basic stats: COMPLETE Column stats: COMPLETE
                        Group By Operator
                          aggregations: min(col1), max(col1), count(1), count(col1), compute_bit_vector_hll(col1), max(length(col2)), avg(COALESCE(length(col2),0)), count(col2), compute_bit_vector_hll(col2)
                          minReductionHashAggr: 0.6666666
                          mode: hash
                          outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8
                          Statistics: Num rows: 1 Data size: 400 Basic stats: COMPLETE Column stats: COMPLETE
                          Reduce Output Operator
                            null sort order: 
                            sort order: 
                            Statistics: Num rows: 1 Data size: 400 Basic stats: COMPLETE Column stats: COMPLETE
                            value expressions: _col0 (type: int), _col1 (type: int), _col2 (type: bigint), _col3 (type: bigint), _col4 (type: binary), _col5 (type: int), _col6 (type: struct<count:bigint,sum:double,input:int>), _col7 (type: bigint), _col8 (type: binary)
            Execution mode: vectorized, llap
            LLAP IO: all inputs (cache only)
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Operator Tree:
              Group By Operator
                aggregations: min(VALUE._col0), max(VALUE._col1), count(VALUE._col2), count(VALUE._col3), compute_bit_vector_hll(VALUE._col4), max(VALUE._col5), avg(VALUE._col6), count(VALUE._col7), compute_bit_vector_hll(VALUE._col8)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8
                Statistics: Num rows: 1 Data size: 332 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: 'LONG' (type: string), UDFToLong(_col0) (type: bigint), UDFToLong(_col1) (type: bigint), (_col2 - _col3) (type: bigint), COALESCE(ndv_compute_bit_vector(_col4),0) (type: bigint), _col4 (type: binary), 'STRING' (type: string), UDFToLong(COALESCE(_col5,0)) (type: bigint), COALESCE(_col6,0) (type: double), (_col2 - _col7) (type: bigint), COALESCE(ndv_compute_bit_vector(_col8),0) (type: bigint), _col8 (type: binary)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11
                  Statistics: Num rows: 1 Data size: 530 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 1 Data size: 530 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-3
    Stats Work
      Basic Stats Work:
      Column Stats Desc:
          Columns: col1, col2
          Column Types: int, string
          Table: default.mv_create_orc

  Stage: Stage-0
    Move Operator
      files:
          hdfs directory: true
#### A masked pattern was here ####

PREHOOK: query: create materialized view mv_create_orc stored by iceberg stored as orc
as
select col1, col2 from ice_tbl_orc where col1 > 1
PREHOOK: type: CREATE_MATERIALIZED_VIEW
PREHOOK: Input: default@ice_tbl_orc
PREHOOK: Output: database:default
PREHOOK: Output: default@mv_create_orc
#### A masked pattern was here ####
POSTHOOK: query: create materialized view mv_create_orc stored by iceberg stored as orc
as
select col1, col2 from ice_tbl_orc where col1 > 1
POSTHOOK: type: CREATE_MATERIALIZED_VIEW
POSTHOOK: Input: default@ice_tbl_orc
POSTHOOK: Output: database:default
POSTHOOK: Output: default@mv_create_orc
#### A masked pattern was here ####
POSTHOOK: Lineage: mv_create_orc.col1 SIMPLE [(ice_tbl_orc)ice_tbl_orc.FieldSchema(name:col1, type:int, comment:null), ]
POSTHOOK: Lineage: mv_create_orc.col2 SIMPLE [(ice_tbl_orc)ice_tbl_orc.FieldSchema(name:col2, type:string, comment:null), ]
PREHOOK: query: select * from ice_tbl_orc
PREHOOK: type: QUERY
PREHOOK: Input: default@ice_tbl_orc
#### A masked pattern was here ####
POSTHOOK: query: select * from ice_tbl_orc
POSTHOOK: type: QUERY
POSTHOOK: Input: default@ice_tbl_orc
#### A masked pattern was here ####
1	Joe
2	Jack
3	Jill
PREHOOK: query: select * from mv_create_orc
PREHOOK: type: QUERY
PREHOOK: Input: default@mv_create_orc
#### A masked pattern was here ####
POSTHOOK: query: select * from mv_create_orc
POSTHOOK: type: QUERY
POSTHOOK: Input: default@mv_create_orc
#### A masked pattern was here ####
2	Jack
3	Jill
PREHOOK: query: insert into ice_tbl_orc (col1, col2) values (4, 'Chuck')
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@ice_tbl_orc
POSTHOOK: query: insert into ice_tbl_orc (col1, col2) values (4, 'Chuck')
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@ice_tbl_orc
PREHOOK: query: create external table ice_ext_tbl_orc (col1 int, col2 string) stored by iceberg stored as orc
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@ice_ext_tbl_orc
POSTHOOK: query: create external table ice_ext_tbl_orc (col1 int, col2 string) stored by iceberg stored as orc
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@ice_ext_tbl_orc
PREHOOK: query: insert into ice_ext_tbl_orc (col1, col2) values (1, 'Chuck')
PREHOOK: type: QUERY
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: default@ice_ext_tbl_orc
POSTHOOK: query: insert into ice_ext_tbl_orc (col1, col2) values (1, 'Chuck')
POSTHOOK: type: QUERY
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: default@ice_ext_tbl_orc
PREHOOK: query: select * from default.mv_create_orc.manifests
PREHOOK: type: QUERY
PREHOOK: Input: default@mv_create_orc
#### A masked pattern was here ####
POSTHOOK: query: select * from default.mv_create_orc.manifests
POSTHOOK: type: QUERY
POSTHOOK: Input: default@mv_create_orc
#### A masked pattern was here ####
